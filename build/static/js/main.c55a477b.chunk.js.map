{"version":3,"sources":["api/index.js","components/Login.js","components/Nav.js","components/OrdersList.js","components/OrderDetails.js","components/Orders.js","components/Cart.js","components/App.js","index.js"],"names":["BASE_URL","loginUser","username","password","a","fetch","method","headers","body","JSON","stringify","response","json","data","registerUser","email","address","getUserOrders","token","Login","props","setIsLoggedIn","isLoggedIn","setLoginToken","setGlobalUserId","useState","setUsername","setPassword","usernameRegister","setUsernameRegister","passwordRegister","setPasswordRegister","setEmail","setAddress","id","type","onClick","className","onSubmit","event","preventDefault","user","console","log","htmlFor","placeholder","value","onChange","target","required","Nav","style","margin","to","OrdersList","loginToken","useEffect","getAllMyOrders","OrderDetails","Orders","Cart","globalUserId","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c55a477b.chunk.js","sourcesContent":["const BASE_URL = 'https://calm-fjord-72273.herokuapp.com/api'\r\n\r\nexport async function loginUser(username, password) {\r\n    try{\r\n      const response = await fetch(`${BASE_URL}/users/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password\r\n        })\r\n    })\r\n\r\n    const data = await response.json()\r\n\r\n    return data\r\n\r\n    } catch(error){\r\n      throw error\r\n    }\r\n}\r\n\r\nexport async function registerUser(username, password, email, address) {\r\n  try{\r\n    const response = await fetch(`${BASE_URL}/users/register`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n        email: email,\r\n        address: address\r\n      })\r\n    })\r\n\r\n    const data = await response.json()\r\n\r\n    return data\r\n\r\n  } catch(error){\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function getUserOrders(token) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/orders/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`\r\n      },\r\n    })\r\n\r\n    const data = await response.json()\r\n\r\n    return data\r\n    \r\n  } catch (error) {\r\n    throw error\r\n  }\r\n}","import React, { useState } from 'react'\nimport { loginUser, registerUser } from '../api'\n\nconst Login = (props) => {\n\n    const {setIsLoggedIn, isLoggedIn, setLoginToken, setGlobalUserId} = props\n\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [usernameRegister, setUsernameRegister] = useState(\"\")\n    const [passwordRegister, setPasswordRegister] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [address, setAddress] = useState(\"\")\n\n    function logout() {\n        setIsLoggedIn(false)\n        setLoginToken('')\n        setUsername('')\n        setPassword('')\n    }\n\n    return(\n        <div>\n            {!isLoggedIn ?\n            <div className='formContainer'>\n                <div id='loginForm'>\n                    <h3>Login</h3>\n                    <form className='loginRegister' onSubmit={async (event) => {\n                        event.preventDefault()\n                        try{\n                            let data = await loginUser(username, password)\n                            if(data.token){ \n                                setIsLoggedIn(true) \n                                setLoginToken(data.token)\n                                setGlobalUserId(data.user.id)\n                                setUsername('')\n                                setPassword('')\n                            }\n                            else{\n                                setIsLoggedIn(false)\n                            }\n                        } catch(err){\n                            setIsLoggedIn(false)\n                            console.log(err)\n                        }\n                    }}>\n                        <div>\n                            <label htmlFor='enterUsername'>Enter username: </label>\n                            <input\n                                id=\"enterUsername\"\n                                type=\"text\"\n                                placeholder=\"Enter your username\"\n                                value={username}\n                                onChange={(event) => setUsername(event.target.value)}\n                                required>\n                            </input>\n                        </div>\n\n                        <div>\n                            <label htmlFor='enterPassword'>Enter password:</label>\n                                <input\n                                    id=\"enterPassword\"\n                                    type=\"password\"\n                                    placeholder=\"enter your password\"\n                                    value={password}\n                                    onChange={(event) => setPassword(event.target.value)}\n                                    required>\n                                </input>\n                        </div>\n                        <button type='submit' id='logInButton'>Log In</button>\n                    </form>\n                </div>\n                \n                <div id='registerForm'>\n                    <h3>Register</h3>\n                    <form className='loginRegister' onSubmit={async (event) => {\n                        event.preventDefault()\n                        try{\n                            let data = await registerUser(usernameRegister, passwordRegister, email, address)\n                            if(data.token){ \n                                setIsLoggedIn(true) \n                                setLoginToken(data.token)\n                                setGlobalUserId(data.user.id)\n                                setUsernameRegister('')\n                                setPasswordRegister('')\n                                setEmail('')\n                                setAddress('')\n                            }\n                            else{\n                                setIsLoggedIn(false)\n                            }\n                        } catch(err){\n                            setIsLoggedIn(false)\n                            console.log(err)\n                        }\n                    }}>\n                        <div>\n                            <label htmlFor='enterDesiredUsername'>Username: </label>\n                            <input\n                                id=\"enterDesiredUsername\"\n                                type=\"text\"\n                                placeholder=\"Enter your desired username\"\n                                value={usernameRegister}\n                                onChange={(event) => setUsernameRegister(event.target.value)}\n                                required>\n                            </input>\n                        </div>\n\n                        <div>\n                            <label htmlFor='enterDesiredPassword'>Password:</label>\n                                <input\n                                    id=\"enterDesiredPassword\"\n                                    type=\"password\"\n                                    placeholder=\"Enter your desired password\"\n                                    value={passwordRegister}\n                                    onChange={(event) => setPasswordRegister(event.target.value)}\n                                    required>\n                                </input>\n                        </div>\n\n                        <div>\n                            <label htmlFor='enterEmail'>Email:</label>\n                                <input\n                                    id=\"enterEmail\"\n                                    type=\"text\"\n                                    placeholder=\"Enter your email\"\n                                    value={email}\n                                    onChange={(event) => setEmail(event.target.value)}\n                                    required>\n                                </input>\n                        </div>\n\n                        <div>\n                            <label htmlFor='enterAddress'>Address:</label>\n                                <input\n                                    id=\"enterAddress\"\n                                    type=\"text\"\n                                    placeholder=\"Enter your address\"\n                                    value={address}\n                                    onChange={(event) => setAddress(event.target.value)}\n                                    required>\n                                </input>\n                        </div>\n                        <button type='submit' id='registerButton'>Sign Up</button>\n                    </form>\n                </div>\n\n            </div> : <div id='logout'>\n                    <button type='submit' onClick={logout}>Logout</button>\n                </div>}\n        </div>\n    )\n}\n\nexport default Login","import React from \"react\"\nimport { Link } from 'react-router-dom'\n\nconst Nav = (props) => {\n    return (\n        <div id='navBar' style={{margin: \"10px 0px\"}}>\n            <Link to=\"/login\"><button className=\"linkButton\">Login</button></Link>\n            <Link to=\"/myorders\"><button className=\"linkButton\">My Orders</button></Link>\n            <Link to=\"/cart\"><button className=\"linkButton\">My Cart</button></Link>\n        </div>\n    )\n}\n\nexport default Nav","import React, { useEffect } from \"react\"\nimport { getUserOrders } from \"../api\"\n\nconst OrdersList = (props) => {\n    const { loginToken } = props\n\n    useEffect(() => {\n        async function getAllMyOrders(loginToken){\n            console.log(loginToken)\n            console.log(await getUserOrders(loginToken))\n        }\n        getAllMyOrders(loginToken)\n    }, [])\n\n    return (\n        <div id='ordersListContainer'>\n            Orders List\n        </div>\n    )\n}\n\nexport default OrdersList","import React from \"react\"\n\nconst OrderDetails = (props) => {\n    return (\n        <div id='orderDetailsContainer'>\n            Order Details\n        </div>\n    )\n}\n\nexport default OrderDetails","import React from \"react\"\nimport OrdersList from \"./OrdersList\"\nimport OrderDetails from \"./OrderDetails\"\n\nconst Orders = (props) => {\n    const { loginToken } = props\n    return (\n        <div id=\"ordersContainer\">\n            <OrdersList loginToken={loginToken}/>\n            <OrderDetails />\n        </div>\n    )\n}\n\nexport default Orders","import React, { useState, useEffect } from 'react'\n\nconst Cart = (props) => {\n    const { globalUserId } = props\n    return (\n        <div id='cart'>\n            Cart\n        </div>\n    )\n}\n\nexport default Cart","import React, { useState, useEffect } from 'react';\nimport {BrowserRouter, Route, Link, Routes} from 'react-router-dom'\nimport Login from './Login'\nimport Nav from './Nav'\nimport Orders from './Orders'\nimport Cart from './Cart'\n\nconst App = () => {\n  const [ isLoggedIn, setIsLoggedIn ] = useState(false)\n  const [ loginToken, setLoginToken ] = useState('')\n  const [ globalUserId, setGlobalUserId ] = useState('')\n\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <h1>Hello, World!</h1>\n        <Nav />\n        <Route path='/login'>\n          <Login isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} setLoginToken={setLoginToken} setGlobalUserId={setGlobalUserId}/>\n        </Route>\n        <Route path='/myorders'>\n          <Orders loginToken={loginToken}/>\n        </Route>\n        <Route path='/cart'>\n          <Cart globalUserId={globalUserId}/>\n        </Route>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {\r\n  App\r\n} from './components';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}